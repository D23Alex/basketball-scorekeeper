import {
  Fragment,
  createBaseVNode,
  createElementBlock,
  defineComponent,
  normalizeClass,
  openBlock,
  renderList,
  renderSlot,
  toDisplayString
} from "./chunk-GDU7L7ZG.js";

// node_modules/@harv46/vue-table/dist/es.js
var h = { class: "relative overflow-x-auto shadow-md sm:rounded-lg" };
var m = { key: 0 };
var f = { key: 1 };
var _ = defineComponent({
  __name: "VueTable",
  props: {
    headers: {},
    data: {},
    keys: {},
    dark: { type: Boolean, default: false }
  },
  setup(y) {
    const g = (e, p) => p.reduce((t, s) => t == null ? void 0 : t[s], e);
    return (e, p) => (openBlock(), createElementBlock("div", h, [
      createBaseVNode("table", {
        class: normalizeClass(["w-full text-sm text-left text-gray-500", { "dark:text-gray-400": e.dark }])
      }, [
        createBaseVNode("thead", {
          class: normalizeClass(["text-xs text-gray-700 uppercase bg-gray-50", { "dark:bg-gray-700 dark:text-gray-400": e.dark }])
        }, [
          createBaseVNode("tr", null, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(e.headers, (t, s) => (openBlock(), createElementBlock("th", {
              key: s,
              scope: "col",
              class: "px-6 py-3"
            }, toDisplayString(t), 1))), 128)),
            renderSlot(e.$slots, "th")
          ])
        ], 2),
        createBaseVNode("tbody", null, [
          (openBlock(true), createElementBlock(Fragment, null, renderList(e.data, (t, s) => (openBlock(), createElementBlock("tr", {
            class: normalizeClass(["bg-white border-b hover:bg-gray-50", {
              "dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-600": e.dark
            }]),
            key: s
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(e.keys, (l, b) => (openBlock(), createElementBlock("td", {
              key: b,
              class: "px-6 py-4"
            }, [
              typeof l == "object" ? (openBlock(), createElementBlock("span", m, toDisplayString(g(t, l)), 1)) : (openBlock(), createElementBlock("span", f, toDisplayString(t[l]), 1))
            ]))), 128)),
            renderSlot(e.$slots, "td", { item: t })
          ], 2))), 128))
        ])
      ], 2)
    ]));
  }
});
var x = {
  install(y, g) {
    y.component("VueTable", _);
  }
};
export {
  _ as VueTable,
  x as default
};
//# sourceMappingURL=@harv46_vue-table.js.map
